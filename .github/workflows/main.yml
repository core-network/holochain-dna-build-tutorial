name: CI
on: [push, pull_request]

jobs:
  test:
    runs-on: ${{ matrix.os }}
    timeout-minutes: 120

    strategy:
      matrix:
        os: [macos-10.15, ubuntu-20.04]
      fail-fast: false

    steps:
      - name: Fetch source code
        uses: actions/checkout@v2

      - name: Cargo Cache
        uses: actions/cache@v2
        with:
          path: .cargo
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      - name: Cargo Target Cache
        uses: actions/cache@v2
        with:
          path: target
          key: ${{ runner.os }}-cargo-target-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-target-

      - name: Set up nix
        uses: cachix/install-nix-action@v13
        with:
          nix_path: nixpkgs=channel:nixos-unstable
          extra_nix_config: |
            substituters = https://cache.nixos.org/ https://cache.holo.host/
            trusted-public-keys = cache.nixos.org-1:6NCHdD59X431o0gWypbMrAURkbJ16ZPMQFGspcDShjY= cache.holo.host-1:lNXIXtJgS9Iuw4Cu6X0HINLu9sTfcjEntnrgwMQIMcE= cache.holo.host-2:ZJCkX3AUYZ8soxTLfTb60g+F3MkWD7hkH9y8CgqwhDQ=

      - name: Cache nix with Cachix
        uses: cachix/cachix-action@v10
        with:
          # this reads from the cache at https://holochain.cachix.org
          # you can set up your own free cache via https://cachix.org
          name: holochain
          # if an auth token is set up, nix will be cached to your cachix cache
          authToken: "${{ secrets.CACHIX_AUTH_TOKEN }}"

      - run: cat ~/.config/nix/nix.conf

      - name: Install recent bash, and set as NIX_BUILD_SHELL # needed by macos, which has an older bash incompatible with nix
        if: ${{ runner.os == 'macOS' }}
        run: echo "NIX_BUILD_SHELL=$(nix-build -A bashInteractive '<nixpkgs>')/bin/bash" >> $GITHUB_ENV

      - name: Prepare Nix environment
        run: nix-shell --command "echo Completed"

      - run: make nix-build

      # - run: make nix-clippy

      - run: make nix-test-ci
        timeout-minutes: 10 # sometimes failing tryorama tests hang...
